/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.SachBUS;
import BUS.TacGiaBUS;
import BUS.NhaXuatBanBUS;
import DTO.SachDTO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Lộc
 */
public class QuanLySach extends javax.swing.JFrame {

    private DefaultTableModel modelSach = new DefaultTableModel();
    private DefaultTableModel resOfSearch;
    private int EditOrSearch = 1;
    private SachBUS sachbus = new SachBUS();
    private TacGiaBUS tacgiabus = new TacGiaBUS();
    private NhaXuatBanBUS nxbbus = new NhaXuatBanBUS();

    /**
     * Creates new form quanLySach
     */
    public QuanLySach() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new RoundedPanel(10, new Color(68, 187, 236));
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new RoundedPanel(50, new Color(20, 20, 50));
        jLabel2 = new javax.swing.JLabel();
        txMaSach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txDonGia = new javax.swing.JTextField();
        txNamXuatBan = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txSoLuong = new javax.swing.JTextField();
        btTaoMoi = new javax.swing.JButton();
        btThem = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        btSua = new javax.swing.JButton();
        btTim = new javax.swing.JButton();
        txTenSach = new javax.swing.JTextField();
        btTatCa = new javax.swing.JButton();
        btXacNhan = new javax.swing.JButton();
        btHuy = new javax.swing.JButton();
        btDong = new javax.swing.JButton();
        txTheLoai = new javax.swing.JTextField();
        btTLSel = new javax.swing.JButton();
        txTacGia = new javax.swing.JTextField();
        btTGSel = new javax.swing.JButton();
        txNhaXuatBan = new javax.swing.JTextField();
        btNXBSel = new javax.swing.JButton();
        lbDash1 = new javax.swing.JLabel();
        txNamXuatBanMax = new javax.swing.JTextField();
        lbDash2 = new javax.swing.JLabel();
        txSoLuongMax = new javax.swing.JTextField();
        lbDash3 = new javax.swing.JLabel();
        txDonGiaMax = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSach = new javax.swing.JTable();
        btNhapEx = new javax.swing.JButton();
        btXuatEx = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÝ SÁCH");
        setLocation(new java.awt.Point(280, 10));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(30, 29, 65));

        jPanel2.setBackground(new java.awt.Color(30, 29, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ SÁCH");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(30, 29, 65));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mã sách:");

        txMaSach.setBackground(new java.awt.Color(27, 26, 67));
        txMaSach.setForeground(new java.awt.Color(255, 255, 255));
        txMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMaSachActionPerformed(evt);
            }
        });
        txMaSach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txMaSachKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Thể loại:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tác giả:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nhà xuất bản:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tên sách:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Đơn giá:");

        txDonGia.setBackground(new java.awt.Color(27, 26, 67));
        txDonGia.setForeground(new java.awt.Color(255, 255, 255));
        txDonGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txDonGiaActionPerformed(evt);
            }
        });
        txDonGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txDonGiaKeyPressed(evt);
            }
        });

        txNamXuatBan.setBackground(new java.awt.Color(27, 26, 67));
        txNamXuatBan.setForeground(new java.awt.Color(255, 255, 255));
        txNamXuatBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNamXuatBanActionPerformed(evt);
            }
        });
        txNamXuatBan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txNamXuatBanKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Năm xuất bản:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Số lượng:");

        txSoLuong.setBackground(new java.awt.Color(27, 26, 67));
        txSoLuong.setForeground(new java.awt.Color(255, 255, 255));
        txSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txSoLuongActionPerformed(evt);
            }
        });
        txSoLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txSoLuongKeyPressed(evt);
            }
        });

        btTaoMoi.setBackground(new java.awt.Color(255, 153, 51));
        btTaoMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTaoMoi.setForeground(new java.awt.Color(255, 255, 255));
        btTaoMoi.setText("Tạo mới");
        btTaoMoi.setToolTipText("");
        btTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTaoMoiActionPerformed(evt);
            }
        });

        btThem.setBackground(new java.awt.Color(27, 26, 67));
        btThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btThem.setForeground(new java.awt.Color(255, 255, 255));
        btThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/add.png"))); // NOI18N
        btThem.setText("Thêm");
        btThem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemActionPerformed(evt);
            }
        });

        btXoa.setBackground(new java.awt.Color(27, 26, 67));
        btXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXoa.setForeground(new java.awt.Color(255, 255, 255));
        btXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/minus.png"))); // NOI18N
        btXoa.setText("Xoá");
        btXoa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btXoa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        btSua.setBackground(new java.awt.Color(27, 26, 67));
        btSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSua.setForeground(new java.awt.Color(255, 255, 255));
        btSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/edit.png"))); // NOI18N
        btSua.setText("Sửa");
        btSua.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btSua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaActionPerformed(evt);
            }
        });

        btTim.setBackground(new java.awt.Color(27, 26, 67));
        btTim.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTim.setForeground(new java.awt.Color(255, 255, 255));
        btTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/search.png"))); // NOI18N
        btTim.setText("Tìm kiếm");
        btTim.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btTim.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTimActionPerformed(evt);
            }
        });

        txTenSach.setBackground(new java.awt.Color(27, 26, 67));
        txTenSach.setForeground(new java.awt.Color(255, 255, 255));
        txTenSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTenSachActionPerformed(evt);
            }
        });
        txTenSach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txTenSachKeyPressed(evt);
            }
        });

        btTatCa.setBackground(new java.awt.Color(165, 201, 63));
        btTatCa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTatCa.setForeground(new java.awt.Color(255, 255, 255));
        btTatCa.setText("Tất cả");
        btTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTatCaActionPerformed(evt);
            }
        });

        btXacNhan.setBackground(new java.awt.Color(165, 201, 63));
        btXacNhan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btXacNhan.setText("Xác nhận");
        btXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXacNhanActionPerformed(evt);
            }
        });

        btHuy.setBackground(new java.awt.Color(206, 81, 80));
        btHuy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btHuy.setForeground(new java.awt.Color(255, 255, 255));
        btHuy.setText("Huỷ");
        btHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHuyActionPerformed(evt);
            }
        });

        btDong.setBackground(new java.awt.Color(206, 81, 80));
        btDong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btDong.setForeground(new java.awt.Color(255, 255, 255));
        btDong.setText("Đóng");
        btDong.setToolTipText("");
        btDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDongActionPerformed(evt);
            }
        });

        txTheLoai.setEditable(false);
        txTheLoai.setBackground(new java.awt.Color(27, 26, 67));
        txTheLoai.setForeground(new java.awt.Color(255, 255, 255));
        txTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTheLoaiActionPerformed(evt);
            }
        });

        btTLSel.setBackground(new java.awt.Color(27, 26, 67));
        btTLSel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTLSel.setForeground(new java.awt.Color(255, 255, 255));
        btTLSel.setText("...");
        btTLSel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btTLSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTLSelActionPerformed(evt);
            }
        });
        btTLSel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btTLSelKeyPressed(evt);
            }
        });

        txTacGia.setEditable(false);
        txTacGia.setBackground(new java.awt.Color(27, 26, 67));
        txTacGia.setForeground(new java.awt.Color(255, 255, 255));
        txTacGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTacGiaActionPerformed(evt);
            }
        });

        btTGSel.setBackground(new java.awt.Color(27, 26, 67));
        btTGSel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btTGSel.setForeground(new java.awt.Color(255, 255, 255));
        btTGSel.setText("...");
        btTGSel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btTGSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTGSelActionPerformed(evt);
            }
        });
        btTGSel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btTGSelKeyPressed(evt);
            }
        });

        txNhaXuatBan.setEditable(false);
        txNhaXuatBan.setBackground(new java.awt.Color(27, 26, 67));
        txNhaXuatBan.setForeground(new java.awt.Color(255, 255, 255));
        txNhaXuatBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNhaXuatBanActionPerformed(evt);
            }
        });

        btNXBSel.setBackground(new java.awt.Color(27, 26, 67));
        btNXBSel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btNXBSel.setForeground(new java.awt.Color(255, 255, 255));
        btNXBSel.setText("...");
        btNXBSel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btNXBSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNXBSelActionPerformed(evt);
            }
        });
        btNXBSel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btNXBSelKeyPressed(evt);
            }
        });

        lbDash1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbDash1.setForeground(new java.awt.Color(255, 255, 255));
        lbDash1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDash1.setText("-");

        txNamXuatBanMax.setBackground(new java.awt.Color(27, 26, 67));
        txNamXuatBanMax.setForeground(new java.awt.Color(255, 255, 255));
        txNamXuatBanMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNamXuatBanMaxActionPerformed(evt);
            }
        });
        txNamXuatBanMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txNamXuatBanMaxKeyPressed(evt);
            }
        });

        lbDash2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbDash2.setForeground(new java.awt.Color(255, 255, 255));
        lbDash2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDash2.setText("-");

        txSoLuongMax.setBackground(new java.awt.Color(27, 26, 67));
        txSoLuongMax.setForeground(new java.awt.Color(255, 255, 255));
        txSoLuongMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txSoLuongMaxActionPerformed(evt);
            }
        });
        txSoLuongMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txSoLuongMaxKeyPressed(evt);
            }
        });

        lbDash3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbDash3.setForeground(new java.awt.Color(255, 255, 255));
        lbDash3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDash3.setText("-");

        txDonGiaMax.setBackground(new java.awt.Color(27, 26, 67));
        txDonGiaMax.setForeground(new java.awt.Color(255, 255, 255));
        txDonGiaMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txDonGiaMaxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txNhaXuatBan, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btNXBSel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txTacGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btTGSel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(txMaSach, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(btXacNhan, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txTheLoai)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btTLSel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(txTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txNamXuatBan)
                                    .addComponent(txSoLuong)
                                    .addComponent(txDonGia))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbDash2)
                                            .addComponent(lbDash1))
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txSoLuongMax, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                            .addComponent(txNamXuatBanMax)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(lbDash3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txDonGiaMax, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btTim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btXoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btThem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btSua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btTatCa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btTaoMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btDong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTim, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbDash1)
                                .addComponent(txNamXuatBanMax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btTLSel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbDash2)
                                        .addComponent(txSoLuongMax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btTGSel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txNhaXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btNXBSel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbDash3)
                                        .addComponent(txDonGiaMax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btXacNhan)
                        .addComponent(btHuy))
                    .addComponent(btDong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btXacNhan.setVisible(false);
        btHuy.setVisible(false);
        lbDash1.setVisible(false);
        txNamXuatBanMax.setVisible(false);
        lbDash2.setVisible(false);
        txSoLuongMax.setVisible(false);
        lbDash3.setVisible(false);
        txDonGiaMax.setVisible(false);

        tbSach.setBackground(new java.awt.Color(20, 20, 50));
        tbSach.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbSach.setForeground(new java.awt.Color(255, 255, 255));
        tbSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sách", "Tên sách", "Thể loại", "Tác giả", "Nhà xuất bản", "Năm xuất bản", "Số lượng", "Đơn giá (VNĐ)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbSach.setGridColor(new java.awt.Color(255, 255, 255));
        tbSach.setRowHeight(25);
        tbSach.setShowGrid(true);
        tbSach.getTableHeader().setResizingAllowed(false);
        tbSach.getTableHeader().setReorderingAllowed(false);
        tbSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbSach);

        btNhapEx.setBackground(new java.awt.Color(27, 26, 67));
        btNhapEx.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btNhapEx.setForeground(new java.awt.Color(255, 255, 255));
        btNhapEx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/import.png"))); // NOI18N
        btNhapEx.setText("Nhập Excel");
        btNhapEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNhapExActionPerformed(evt);
            }
        });

        btXuatEx.setBackground(new java.awt.Color(27, 26, 67));
        btXuatEx.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXuatEx.setForeground(new java.awt.Color(255, 255, 255));
        btXuatEx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconImages/export.png"))); // NOI18N
        btXuatEx.setText("Xuất Excel");
        btXuatEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXuatExActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(btNhapEx)
                        .addGap(18, 18, 18)
                        .addComponent(btXuatEx)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNhapEx)
                    .addComponent(btXuatEx))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTaoMoiActionPerformed
        // TODO add your handling code here:
        if (tbSach.isEnabled()) {
            txMaSach.setText("");
        }
        if (EditOrSearch == 0) {
            txNamXuatBanMax.setText("");
            txSoLuongMax.setText("");
            txDonGiaMax.setText("");
        }
        txTenSach.setText("");
        txTheLoai.setText("");
        txTacGia.setText("");
        txNhaXuatBan.setText("");
        txNamXuatBan.setText("");
        txSoLuong.setText("");
        txDonGia.setText("");
    }//GEN-LAST:event_btTaoMoiActionPerformed

    private void txMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMaSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txMaSachActionPerformed

    private void txDonGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txDonGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txDonGiaActionPerformed

    private void txNamXuatBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNamXuatBanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNamXuatBanActionPerformed

    private void txSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txSoLuongActionPerformed

    private void txTenSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTenSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTenSachActionPerformed

    private void tbSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSachMouseClicked
        // TODO add your handling code here:
        int i = tbSach.getSelectedRow();
        if (sachbus.getList().size() > 0) {
            SachDTO sach = new SachDTO();
            sach = sachbus.getList().get(i);
            Integer namXB, soLuong, donGia;
            String str_namXB, str_soLuong, str_donGia;

            namXB = sach.getNamXuatBan();
            str_namXB = namXB.toString();
            soLuong = sach.getSoLuong();
            str_soLuong = soLuong.toString();
            donGia = sach.getDonGia();
            str_donGia = donGia.toString();

            txMaSach.setText(sach.getMaSach());
            txTenSach.setText(sach.getTenSach());
            txTheLoai.setText(sach.getTheLoai());
            txTacGia.setText(sach.getTacGia());
            txNhaXuatBan.setText(sach.getNhaXuatBan());
            txNamXuatBan.setText(str_namXB);
            txSoLuong.setText(str_soLuong);
            txDonGia.setText(str_donGia);
        }
    }//GEN-LAST:event_tbSachMouseClicked

    private void btThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemActionPerformed
        // TODO add your handling code here:
        if (!ValidateThemSach()) {
            return;
        }

        SachDTO sach = new SachDTO();

        sach.setMaSach(txMaSach.getText());
        sach.setTenSach(txTenSach.getText());
        sach.setTheLoai(txTheLoai.getText());
        sach.setTacGia(txTacGia.getText());
        sach.setNhaXuatBan(txNhaXuatBan.getText());
        sach.setNamXuatBan(Integer.parseInt(txNamXuatBan.getText()));
        sach.setSoLuong(Integer.parseInt(txSoLuong.getText()));
        sach.setDonGia(Integer.parseInt(txDonGia.getText()));

        try {
            sachbus.Add(sach);
        } catch (Exception ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }

        Vector row = new Vector();
        row.add(sach.getMaSach());
        row.add(sach.getTenSach());
        row.add(sach.getTheLoai());
        row.add(sach.getTacGia());
        row.add(sach.getNhaXuatBan());
        row.add(sach.getNamXuatBan());
        row.add(sach.getSoLuong());
        row.add(sach.getDonGia());

        modelSach.addRow(row);

        tbSach.setModel(modelSach);
    }//GEN-LAST:event_btThemActionPerformed

    private void btSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaActionPerformed
        // TODO add your handling code here:
        int i = tbSach.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Chọn sách cần chỉnh sửa", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        EditOrSearch = 1;
        txMaSach.setEditable(false);
        tbSach.setEnabled(false);
        btThem.setEnabled(false);
        btXoa.setEnabled(false);
        btTim.setEnabled(false);
        btTatCa.setEnabled(false);
        btNhapEx.setEnabled(false);
        btXuatEx.setEnabled(false);
        lbDash1.setVisible(false);
        lbDash2.setVisible(false);
        lbDash3.setVisible(false);
        txNamXuatBanMax.setVisible(false);
        txSoLuongMax.setVisible(false);
        txDonGiaMax.setVisible(false);
        btXacNhan.setText("Sửa");
        btXacNhan.setVisible(true);
        btHuy.setVisible(true);
    }//GEN-LAST:event_btSuaActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        // TODO add your handling code here:
        int i = tbSach.getSelectedRow();
        if (sachbus.getList().size() > 0) {
            try {
                sachbus.Remove(sachbus.getList().get(i).getMaSach());
            } catch (Exception ex) {
                Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
            }
            modelSach.removeRow(i);
            tbSach.setModel(modelSach);

            txMaSach.setText("");
            txTenSach.setText("");
            txTheLoai.setText("");
            txTacGia.setText("");
            txNhaXuatBan.setText("");
            txNamXuatBan.setText("");
            txSoLuong.setText("");
            txDonGia.setText("");
        }

    }//GEN-LAST:event_btXoaActionPerformed

    private void btTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimActionPerformed
        // TODO add your handling code here:
        EditOrSearch = 0;
        lbDash1.setVisible(true);
        lbDash2.setVisible(true);
        lbDash3.setVisible(true);
        txNamXuatBanMax.setVisible(true);
        txSoLuongMax.setVisible(true);
        txDonGiaMax.setVisible(true);
        btXacNhan.setText("Tìm");
        btXacNhan.setVisible(true);
        btHuy.setVisible(true);
    }//GEN-LAST:event_btTimActionPerformed

    private void btTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTatCaActionPerformed
        // TODO add your handling code here:
        if (sachbus.getList().size() > 0) {
            tbSach.setModel(modelSach);
        }
    }//GEN-LAST:event_btTatCaActionPerformed

    private void btHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHuyActionPerformed
        // TODO add your handling code here:
        if (EditOrSearch == 1) {
            txMaSach.setEditable(true);
            tbSach.setEnabled(true);
            btThem.setEnabled(true);
            btXoa.setEnabled(true);
            btTim.setEnabled(true);
            btTatCa.setEnabled(true);
            btNhapEx.setEnabled(true);
            btXuatEx.setEnabled(true);
            btXacNhan.setVisible(false);
            btHuy.setVisible(false);
        } else {
            lbDash1.setVisible(false);
            lbDash2.setVisible(false);
            lbDash3.setVisible(false);
            txNamXuatBanMax.setVisible(false);
            txSoLuongMax.setVisible(false);
            txDonGiaMax.setVisible(false);
            btXacNhan.setVisible(false);
            btHuy.setVisible(false);
        }
    }//GEN-LAST:event_btHuyActionPerformed

    private void btDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDongActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btDongActionPerformed

    private void btXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXacNhanActionPerformed
        // TODO add your handling code here:
        if (EditOrSearch == 1) {
            Edit();
        } else {
            Search();
        }
    }//GEN-LAST:event_btXacNhanActionPerformed

    private void txTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTheLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTheLoaiActionPerformed

    private void btTLSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTLSelActionPerformed
        // TODO add your handling code here:
        TheLoaiSelector TheLoaiSel = new TheLoaiSelector();
        try {
            TheLoaiSel.List();
        } catch (Exception ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }
        TheLoaiSel.setVisible(true);
    }//GEN-LAST:event_btTLSelActionPerformed

    private void txTacGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTacGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTacGiaActionPerformed

    private void btTGSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTGSelActionPerformed
        // TODO add your handling code here:
        TacGiaSelector TacGiaSel = new TacGiaSelector();
        try {
            TacGiaSel.List();
        } catch (Exception ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }
        TacGiaSel.setVisible(true);
    }//GEN-LAST:event_btTGSelActionPerformed

    private void txNhaXuatBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNhaXuatBanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNhaXuatBanActionPerformed

    private void btNXBSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNXBSelActionPerformed
        // TODO add your handling code here:
        NhaXuatBanSelector NXBSel = new NhaXuatBanSelector();
        try {
            NXBSel.List();
        } catch (Exception ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }
        NXBSel.setVisible(true);
    }//GEN-LAST:event_btNXBSelActionPerformed

    private void txNamXuatBanMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNamXuatBanMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNamXuatBanMaxActionPerformed

    private void txSoLuongMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txSoLuongMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txSoLuongMaxActionPerformed

    private void txDonGiaMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txDonGiaMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txDonGiaMaxActionPerformed

    private void txMaSachKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txMaSachKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btTLSel.requestFocus();
            btTLSel.doClick();
        }
    }//GEN-LAST:event_txMaSachKeyPressed

    private void txTenSachKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txTenSachKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txNamXuatBan.requestFocus();
        }
    }//GEN-LAST:event_txTenSachKeyPressed

    private void txNamXuatBanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNamXuatBanKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (EditOrSearch != 0) {
                txSoLuong.requestFocus();
            } else {
                txNamXuatBanMax.requestFocus();
            }
        }
    }//GEN-LAST:event_txNamXuatBanKeyPressed

    private void txSoLuongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSoLuongKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (EditOrSearch != 0) {
                txDonGia.requestFocus();
            } else {
                txSoLuongMax.requestFocus();
            }
        }
    }//GEN-LAST:event_txSoLuongKeyPressed

    private void btTLSelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btTLSelKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btTGSel.requestFocus();
            btTGSel.doClick();
        }
    }//GEN-LAST:event_btTLSelKeyPressed

    private void btTGSelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btTGSelKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btNXBSel.requestFocus();
            btNXBSel.doClick();
        }
    }//GEN-LAST:event_btTGSelKeyPressed

    private void btNXBSelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btNXBSelKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txTenSach.requestFocus();
        }
    }//GEN-LAST:event_btNXBSelKeyPressed

    private void txNamXuatBanMaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNamXuatBanMaxKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txSoLuong.requestFocus();
        }
    }//GEN-LAST:event_txNamXuatBanMaxKeyPressed

    private void txSoLuongMaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSoLuongMaxKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txDonGia.requestFocus();
        }
    }//GEN-LAST:event_txSoLuongMaxKeyPressed

    private void txDonGiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txDonGiaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && EditOrSearch == 0) {
            txDonGiaMax.requestFocus();
        }
    }//GEN-LAST:event_txDonGiaKeyPressed

    private void btXuatExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXuatExActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int j = chooser.showSaveDialog(chooser);
        if (JFileChooser.APPROVE_OPTION == j) {
            File file = chooser.getSelectedFile();
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet();

            XSSFFont font = workbook.createFont();
            font.setFontHeightInPoints((short) 12);
            font.setBold(true);

            font.setColor(IndexedColors.BLUE.getIndex());

            // Create a CellStyle with the font
            XSSFCellStyle headerCellStyle = workbook.createCellStyle();
            headerCellStyle.setFont(font);

            // Create a Row
            XSSFRow headerRow = sheet.createRow(0);
            String[] columns = {
                "Mã sách",
                "Tên sách",
                "Thể loại",
                "Tác giả",
                "Nhà xuất bản",
                "Năm xuất bản",
                "Số lượng",
                "Đơn giá"
            };

            // Create cells
            for (int i = 0; i < columns.length; i++) {
                Cell cell = headerRow.createCell(i);
                cell.setCellValue(columns[i]);
                cell.setCellStyle(headerCellStyle);
            }

            // Create Other rows and cells with employees data
            int rowNum = 1;
            list();
            List<SachDTO> listSach = sachbus.getList();
            for (SachDTO sach : listSach) {
                XSSFRow row = sheet.createRow(rowNum++);
                row.createCell(0).setCellValue(sach.getMaSach());
                row.createCell(1).setCellValue(sach.getTenSach());
                row.createCell(2).setCellValue(sach.getTheLoai());
                row.createCell(3).setCellValue(sach.getTacGia());
                row.createCell(4).setCellValue(sach.getNhaXuatBan());
                row.createCell(5).setCellValue(sach.getNamXuatBan());
                row.createCell(6).setCellValue(sach.getSoLuong());
                row.createCell(7).setCellValue(sach.getDonGia());
            }

            for (int i = 0; i < columns.length; i++) {
                sheet.autoSizeColumn(i);
            }

            try {
                OutputStream os = new FileOutputStream(file + ".xlsx");
                workbook.write(os);
                JOptionPane.showMessageDialog(null, "Lưu file thành công!");
                // Closing stream
                workbook.close();
                os.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Lỗi khi lưu file!");
            }
        }
    }//GEN-LAST:event_btXuatExActionPerformed

    private void btNhapExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNhapExActionPerformed
        // TODO add your handling code here:
        File excelFile;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportToJTable = null;
        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Select Excel File");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportToJTable = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportToJTable.getSheetAt(0);

                for (int row = 1; row <= excelSheet.getLastRowNum(); row++) {
                    XSSFRow excelRow = excelSheet.getRow(row);
                    String MaSach = excelRow.getCell(0).toString();
                    String TenSach = excelRow.getCell(1).toString();
                    String TheLoai = excelRow.getCell(2).toString();
                    String TacGia = excelRow.getCell(3).toString();
                    String NhaXuatBan = excelRow.getCell(4).toString();
                    Cell cell = excelRow.getCell(5);
                    Object cellValue = getCellValue(cell);
                    int NamXuatBan = new BigDecimal((double) cellValue).intValue();
                    cell = excelRow.getCell(6);
                    cellValue = getCellValue(cell);
                    int SoLuong = new BigDecimal((double) cellValue).intValue();
                    cell = excelRow.getCell(7);
                    cellValue = getCellValue(cell);
                    int DonGia = new BigDecimal((double) cellValue).intValue();

                    SachDTO sach = new SachDTO();
                    sach.setMaSach(MaSach);
                    sach.setTenSach(TenSach);
                    sach.setTheLoai(TheLoai);
                    sach.setTacGia(TacGia);
                    sach.setNhaXuatBan(NhaXuatBan);
                    sach.setNamXuatBan(NamXuatBan);
                    sach.setSoLuong(SoLuong);
                    sach.setDonGia(DonGia);

                    sachbus.Add(sach);
                }
                JOptionPane.showMessageDialog(null, "Nhập file thành công!");
            } catch (IOException iOException) {
                JOptionPane.showMessageDialog(null, iOException.getMessage());
            } catch (Exception ex) {
                Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (excelFIS != null) {
                        excelFIS.close();
                    }
                    if (excelBIS != null) {
                        excelBIS.close();
                    }
                    if (excelImportToJTable != null) {
                        excelImportToJTable.close();
                    }
                } catch (IOException iOException) {
                    JOptionPane.showMessageDialog(null, iOException.getMessage());
                }
            }
        }
        //Dua bang ve trang thai ban dau
        ArrayList<SachDTO> listSach = sachbus.getList();
        Vector header = new Vector();
        header.add("Mã sách");
        header.add("Tên sách");
        header.add("Thể loại");
        header.add("Tác giả");
        header.add("Nhà xuất bản");
        header.add("Năm xuất bản");
        header.add("Số lượng");
        header.add("Đơn giá");
        modelSach = new DefaultTableModel(header, 0);
        for (SachDTO sach : listSach) {
            Vector row = new Vector();
            row.add(sach.getMaSach());
            row.add(sach.getTenSach());
            row.add(sach.getTheLoai());
            row.add(sach.getTacGia());
            row.add(sach.getNhaXuatBan());
            row.add(sach.getNamXuatBan());
            row.add(sach.getSoLuong());
            row.add(sach.getDonGia());
            modelSach.addRow(row);
        }
        tbSach.setModel(modelSach);

    }//GEN-LAST:event_btNhapExActionPerformed

    private static Object getCellValue(Cell cell) {
        CellType cellType = cell.getCellTypeEnum();
        Object cellValue = null;
        switch (cellType) {
            case BOOLEAN:
                cellValue = cell.getBooleanCellValue();
                break;
            case FORMULA:
                Workbook workbook = cell.getSheet().getWorkbook();
                FormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();
                cellValue = evaluator.evaluate(cell).getNumberValue();
                break;
            case NUMERIC:
                cellValue = cell.getNumericCellValue();
                break;
            case STRING:
                cellValue = cell.getStringCellValue();
                break;
            case _NONE:
            case BLANK:
            case ERROR:
                break;
            default:
                break;
        }
        return cellValue;
    }

    public void List() throws Exception {
        if (sachbus.getList() == null) {
            sachbus.listSach();
        }
        ArrayList<SachDTO> listSach = sachbus.getList();
        Vector header = new Vector();
        header.add("Mã sách");
        header.add("Tên sách");
        header.add("Thể loại");
        header.add("Tác giả");
        header.add("Nhà xuất bản");
        header.add("Năm xuất bản");
        header.add("Số lượng");
        header.add("Đơn giá");
        if (modelSach.getRowCount() == 0) {
            modelSach = new DefaultTableModel(header, 0);
        }
        for (SachDTO sach : listSach) {
            Vector row = new Vector();
            row.add(sach.getMaSach());
            row.add(sach.getTenSach());
            row.add(sach.getTheLoai());
            row.add(sach.getTacGia());
            row.add(sach.getNhaXuatBan());
            row.add(sach.getNamXuatBan());
            row.add(sach.getSoLuong());
            row.add(sach.getDonGia());
            modelSach.addRow(row);
        }
        tbSach.setModel(modelSach);
    }

    private void Edit() {
        int i = tbSach.getSelectedRow();
        if (sachbus.getList().size() > 0) {
            SachDTO sach = new SachDTO();

            sach.setMaSach(txMaSach.getText());
            sach.setTenSach(txTenSach.getText());
            sach.setTheLoai(txTheLoai.getText());
            sach.setTacGia(txTacGia.getText());
            sach.setNhaXuatBan(txNhaXuatBan.getText());
            sach.setNamXuatBan(Integer.parseInt(txNamXuatBan.getText()));
            sach.setSoLuong(Integer.parseInt(txSoLuong.getText()));
            sach.setDonGia(Integer.parseInt(txDonGia.getText()));

            try {
                sachbus.Edit(sach);
            } catch (Exception ex) {
                Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
            }

            modelSach.setValueAt(sach.getMaSach(), i, 0);
            modelSach.setValueAt(sach.getTenSach(), i, 1);
            modelSach.setValueAt(sach.getTheLoai(), i, 2);
            modelSach.setValueAt(sach.getTacGia(), i, 3);
            modelSach.setValueAt(sach.getNhaXuatBan(), i, 4);
            modelSach.setValueAt(sach.getNamXuatBan(), i, 5);
            modelSach.setValueAt(sach.getSoLuong(), i, 6);
            modelSach.setValueAt(sach.getDonGia(), i, 7);

            tbSach.setModel(modelSach);
        }
    }

    private void Search() {
        if (sachbus.getList().isEmpty()) {
            return;
        }

        String MaSach, TenSach, TheLoai, TacGia, NhaXuatBan;
        int NamXuatBan, SoLuong, DonGia, NamXuatBanMax, SoLuongMax, DonGiaMax;

        MaSach = txMaSach.getText();
        TenSach = txTenSach.getText();
        TheLoai = txTheLoai.getText();
        TacGia = txTacGia.getText();
        NhaXuatBan = txNhaXuatBan.getText();
        if (txNamXuatBan.getText().equals("")) {
            NamXuatBan = -1;
        } else {
            NamXuatBan = Integer.parseInt(txNamXuatBan.getText());
        }
        if (txSoLuong.getText().equals("")) {
            SoLuong = -1;
        } else {
            SoLuong = Integer.parseInt(txSoLuong.getText());
        }
        if (txDonGia.getText().equals("")) {
            DonGia = -1;
        } else {
            DonGia = Integer.parseInt(txDonGia.getText());
        }
        if (txNamXuatBanMax.getText().equals("")) {
            NamXuatBanMax = -1;
        } else {
            NamXuatBanMax = Integer.parseInt(txNamXuatBanMax.getText());
        }
        if (txSoLuongMax.getText().equals("")) {
            SoLuongMax = -1;
        } else {
            SoLuongMax = Integer.parseInt(txSoLuongMax.getText());
        }
        if (txDonGiaMax.getText().equals("")) {
            DonGiaMax = -1;
        } else {
            DonGiaMax = Integer.parseInt(txDonGiaMax.getText());
        }

        ArrayList<SachDTO> res = new ArrayList<SachDTO>();
        try {
            res = sachbus.Search(MaSach, TenSach, TheLoai, TacGia, NhaXuatBan, NamXuatBan, NamXuatBanMax, SoLuong, SoLuongMax, DonGia, DonGiaMax);
        } catch (Exception ex) {
            Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (res.size() == 0) {
            JOptionPane.showMessageDialog(null, "Không tìm thấy kết quả nào!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Vector header = new Vector();
            header.add("Mã sách");
            header.add("Tên sách");
            header.add("Thể loại");
            header.add("Tác giả");
            header.add("Nhà xuất bản");
            header.add("Năm xuất bản");
            header.add("Số lượng");
            header.add("Đơn giá");
            resOfSearch = new DefaultTableModel(header, 0);
            for (SachDTO s : res) {
                Vector row = new Vector();
                row.add(s.getMaSach());
                row.add(s.getTenSach());
                row.add(s.getTheLoai());
                row.add(s.getTacGia());
                row.add(s.getNhaXuatBan());
                row.add(s.getNamXuatBan());
                row.add(s.getSoLuong());
                row.add(s.getDonGia());
                resOfSearch.addRow(row);
            }
            tbSach.setModel(resOfSearch);
        }
    }

    public static void setTheLoai(String TenTL) {
        txTheLoai.setText(TenTL);
    }

    public static void setTacGia(String TenTG) {
        txTacGia.setText(TenTG);
    }

    public static void setNhaXuatBan(String TenNXB) {
        txNhaXuatBan.setText(TenNXB);
    }

    private boolean ValidateThemSach() {
        String masach, tensach, theloai, tacgia, nhaxuatban, namxuatban, soluong, dongia;
        masach = txMaSach.getText();
        tensach = txTenSach.getText();
        theloai = txTheLoai.getText();
        tacgia = txTacGia.getText();
        nhaxuatban = txNhaXuatBan.getText();
        namxuatban = txNamXuatBan.getText();
        soluong = txSoLuong.getText();
        dongia = txDonGia.getText();

        if (masach.equals("") || tensach.equals("") || theloai.equals("") || tacgia.equals("") || nhaxuatban.equals("") || namxuatban.equals("") || soluong.equals("") || dongia.equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        for (SachDTO sach : sachbus.getList()) {
            if (masach.equals(sach.getMaSach())) {
                JOptionPane.showMessageDialog(null, "Mã sách đã tồn tại", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }

        if (namxuatban.matches("\\D")) {
            JOptionPane.showMessageDialog(null, "Năm xuất bản phải ở định dạng số", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        if (soluong.matches("\\D")) {
            JOptionPane.showMessageDialog(null, "Số lượng phải ở định dạng số", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        if (dongia.matches("\\D")) {
            JOptionPane.showMessageDialog(null, "Đơn giá phải ở định dạng số", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLySach QLSach = new QuanLySach();
                try {
                    QLSach.List();
                } catch (Exception ex) {
                    Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
                }
                QLSach.setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDong;
    private javax.swing.JButton btHuy;
    private javax.swing.JButton btNXBSel;
    private javax.swing.JButton btNhapEx;
    private javax.swing.JButton btSua;
    private javax.swing.JButton btTGSel;
    private javax.swing.JButton btTLSel;
    private javax.swing.JButton btTaoMoi;
    private javax.swing.JButton btTatCa;
    private javax.swing.JButton btThem;
    private javax.swing.JButton btTim;
    private javax.swing.JButton btXacNhan;
    private javax.swing.JButton btXoa;
    private javax.swing.JButton btXuatEx;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDash1;
    private javax.swing.JLabel lbDash2;
    private javax.swing.JLabel lbDash3;
    private javax.swing.JTable tbSach;
    private javax.swing.JTextField txDonGia;
    private javax.swing.JTextField txDonGiaMax;
    private javax.swing.JTextField txMaSach;
    private javax.swing.JTextField txNamXuatBan;
    private javax.swing.JTextField txNamXuatBanMax;
    private static javax.swing.JTextField txNhaXuatBan;
    private javax.swing.JTextField txSoLuong;
    private javax.swing.JTextField txSoLuongMax;
    private static javax.swing.JTextField txTacGia;
    private javax.swing.JTextField txTenSach;
    private static javax.swing.JTextField txTheLoai;
    // End of variables declaration//GEN-END:variables
    class RoundedPanel extends JPanel {

        private Color backgroundColor;
        private int cornerRadius = 15;

        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }

        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;

        }

        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width - 1, height - 1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }
}
